<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.am.adastra.mapper.UserMapper">

    <insert id="addDBO" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into users(username, password, account, items) value (#{username}, #{password}, #{account}, #{jsItems})
    </insert>

    <update id="updateDBO">
        update users
        set username=#{username},
            password=#{password},
            account=#{account}
        where id = #{id}
    </update>


    <select id="getDBOById" resultType="com.am.adastra.entity.UserDBO">
        select id, username, password, account, items as jsItems, state
        from users
        where id = #{id}
    </select>

    <select id="getDBOByUsername" resultType="com.am.adastra.entity.UserDBO">
        select id, username, password, account, items as jsItems, state
        from users
        where username = #{username}
    </select>

    <select id="getDBOByAccount" resultType="com.am.adastra.entity.UserDBO">
        select id, username, password, account, items as jsItems, state
        from users
        where account = #{account}
    </select>

    <update id="updatePwd">
        update users
        set password = #{password}
        where id = #{id}
    </update>

    <insert id="passwordBack">
        insert into password(uid, new_password)
        values (#{uid}, #{password})
    </insert>


    <!--  返回所有用户信息
     @Select("select * from users")-->
    <select id="list" resultMap="listMap">
        select id, username, account, items, state, create_time, update_time
        from users
    </select>
    <resultMap id="listMap" type="com.am.adastra.entity.vo.UserVO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="account" property="account"/>
<!--        <result column="items" property="items"/>-->
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="state" property="state"/>
    </resultMap>


<!--    分页查询用户信息
    List<User> selectPage(int cur, int pageSize);-->
    <select id="selectPage" resultMap="listMap">
        select id, username, account, items, state, create_time, update_time
        from users
        where username like #{username}
        order by id
        limit #{cur},#{pageSize};
    </select>

   <!-- 修改用户状态
    int changeState(Long uid);-->
    <update id="changeState" >
        update users
        set state=(if(state='normal','UN_normal','normal'))
        where id=#{uid}
    </update>

    <!--List<UserLoginLogVO> loginList();-->
    <select id="loginList" resultMap="loginListMap">
        select id,uid,time,ip
        from user_login_log
    </select>
    <resultMap id="loginListMap" type="com.am.adastra.entity.vo.UserLoginLogVO">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="time" property="time"/>
        <result column="ip" property="ip"/>
    </resultMap>

    <!--List<UserLoginLogVO> loginListByUid(Long uid);-->
    <select id="loginListByUid" resultType="com.am.adastra.entity.vo.UserLoginLogVO">
        select id, uid, time, ip
        from user_login_log
        where uid=#{uid}
    </select>
</mapper>
