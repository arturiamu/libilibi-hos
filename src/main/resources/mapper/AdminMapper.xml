<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.am.adastra.mapper.AdminMapper">


    <!-- * 通过用户名查询用户信息
     Admin getByUsername(String username);-->
    <select id="getByUsername" resultMap="getByUsernameMap">
        select id, username, password, nickname, avatar
        from admin
        where username = #{username}
    </select>
    <resultMap id="getByUsernameMap" type="com.am.adastra.entity.vo.AdminVO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="avatar" property="avatar"/>
    </resultMap>

    <update id="updataUser" parameterType="com.am.adastra.entity.UserDBO">
        update users
        set username=#{username},
            password=#{password},
            account=#{account},
            items=#{jsItems},
            state=#{state}
        where id = #{id}
    </update>


    <!--    Integer selectTotal();-->
    <select id="selectTotal" resultType="Integer">
        select count(id)
        from users
    </select>

    <update id="updateAdmin">
        update admin
        set username=#{username},
            nickname=#{nickname},
            avatar=#{avatar}
        where id=#{id}
    </update>


<!--    List<AdviseVO> getAllAdvise();-->
    <select id="getAllAdvise" resultMap="getAllAdviseMap">
        select id, uid, advise, advise_time, state
        from advise
        order by advise_time desc
    </select>
    <resultMap id="getAllAdviseMap" type="com.am.adastra.entity.vo.AdviseVO">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="advise" property="advise"/>
        <result column="advise_time" property="advise_time"/>
        <result column="state" property="state"/>
    </resultMap>

</mapper>
